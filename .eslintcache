[{"/Users/bryce/Development/code/project/aroundcampus/frontend/src/App.js":"1","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/SignUp.jsx":"2","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostButton.jsx":"3","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Login.jsx":"4","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/MenuDrawer.jsx":"5","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MainApp.jsx":"6"},{"size":1734,"mtime":1610923094490,"results":"7","hashOfConfig":"8"},{"size":7093,"mtime":1610847316696,"results":"9","hashOfConfig":"8"},{"size":2975,"mtime":1610945453737,"results":"10","hashOfConfig":"8"},{"size":4248,"mtime":1610921247531,"results":"11","hashOfConfig":"8"},{"size":824,"mtime":1610944728785,"results":"12","hashOfConfig":"8"},{"size":1119,"mtime":1610952206440,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"h0ddi3",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bryce/Development/code/project/aroundcampus/frontend/src/App.js",["30","31","32"],"import React, { useEffect } from \"react\";\nimport SignUp from \"./components/SignUp\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport MainApp from \"./containers/MainApp\";\nimport { useSetRecoilState} from \"recoil\";\nimport loggedInState from \"./atoms/loggedInAtom\";\nimport userState from \"./atoms/userAtom\";\nimport axios from \"axios\";\nimport Welcome from \"./containers/Welcome\";\nimport Login from \"./components/Login\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nfunction App() {\n  const setLoggedIn = useSetRecoilState(loggedInState);\n  const setCurrentUser = useSetRecoilState(userState);\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            main: \"#FF8552\",\n          },\n          secondary: {\n            main: \"#85FFC7\",\n          }\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  useEffect(async () => {\n    if (localStorage.token) {\n\n      setLoggedIn(true);\n      const res = await axios.get(\"/current_user\");\n      setCurrentUser(res.data);\n    } else {\n      setLoggedIn(false);\n    }\n  }, []);\n\n  return (\n    <div>\n    <ThemeProvider theme={theme}>\n    <CssBaseline/>\n    <Switch>\n        <Route exact path=\"/\" component={Welcome} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/home\" component={MainApp} />\n      </Switch>\n    </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n",["33","34"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/SignUp.jsx",["35"],"import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios'\nimport {useRecoilState} from 'recoil';\nimport userState from '../atoms/userAtom';\nimport {useHistory} from 'react-router-dom'\nimport LoggedInState from '../atoms/loggedInAtom'\nimport { Link as LinkTo } from \"react-router-dom\";\n\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://github.com/brycemooore\" target=\"_blank\">\n        Bryce Moore\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const [first_name, setFirstName] = useState('')\n  const [last_name, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [password_confirmation, setPasswordConfirm] = useState('')\n  const [stateUser, setUser] = useRecoilState(userState)\n  const history = useHistory()\n  const [errors, setErrors] = useState({})\n  const [loggedIn, setLoggedIn] = useRecoilState(LoggedInState)\n\n  const onSubmitForm = async (e) => {\n      e.preventDefault();\n      console.log(stateUser)\n      const user = {\n          first_name: first_name,\n          last_name: last_name,\n          email: email,\n          username: username,\n          password: password,\n          password_confirmation: password_confirmation,\n      }\n\n      try{\n        const res = await axios.post('/signup', {user, school_id:1})\n        debugger\n        setUser({...res.data.user})\n        localStorage.token = res.data.jwt\n        setLoggedIn(true)\n        history.push('/home')\n      }\n      catch(error){\n        console.log(error.response.data)\n        setErrors({...error.response.data})\n      }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                onChange={(e) => setFirstName(e.target.value)}\n                error={!!errors.first_name}\n                helperText={(!!errors.first_name ? errors.first_name[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange={(e) => setLastName(e.target.value)}\n                error={!!errors.last_name}\n                helperText={(!!errors.last_name ? errors.last_name[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"username\"\n                label=\"Username\"\n                type=\"username\"\n                id=\"username\"\n                autoComplete=\"current-username\"\n                onChange={(e) => setUsername(e.target.value)}\n                error={!!errors.username}\n                helperText={(!!errors.username ? errors.username[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                error={!!errors.email}\n                helperText={(!!errors.email ? errors.email[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPassword(e.target.value)}\n                error={!!errors.password}\n                helperText={(!!errors.password ? errors.password[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password_confirmation\"\n                label=\"Password Confirmation\"\n                type=\"password\"\n                id=\"password_confirmations\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPasswordConfirm(e.target.value)}\n                error={!!errors.password_confirmation}\n                helperText={(!!errors.password_confirmation ? errors.password_confirmation[0] : null)}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={onSubmitForm}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n            <LinkTo style={{textDecoration: 'none'}} to=\"/login\">\n                <Link variant=\"body2\">{\"Already have an account? Login\"}</Link>\n              </LinkTo>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}",["36","37"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostButton.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Login.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/MenuDrawer.jsx",["38","39"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MainApp.jsx",["40"],{"ruleId":"41","severity":1,"message":"42","line":3,"column":25,"nodeType":"43","messageId":"44","endLine":3,"endColumn":35},{"ruleId":"45","severity":1,"message":"46","line":36,"column":13,"nodeType":"47","endLine":45,"endColumn":4},{"ruleId":"45","severity":1,"message":"48","line":45,"column":6,"nodeType":"49","endLine":45,"endColumn":8,"suggestions":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"41","severity":1,"message":"55","line":68,"column":10,"nodeType":"43","messageId":"44","endLine":68,"endColumn":18},{"ruleId":"51","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"41","severity":1,"message":"58","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":15},{"ruleId":"41","severity":1,"message":"59","line":6,"column":8,"nodeType":"43","messageId":"44","endLine":6,"endColumn":20},{"ruleId":"41","severity":1,"message":"60","line":28,"column":11,"nodeType":"43","messageId":"44","endLine":28,"endColumn":14},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'setCurrentUser' and 'setLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["61"],"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'loggedIn' is assigned a value but never used.",["62"],["63"],"'Divider' is defined but never used.","'ListItemIcon' is defined but never used.","'res' is assigned a value but never used.",{"desc":"64","fix":"65"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [setCurrentUser, setLoggedIn]",{"range":"66","text":"67"},[1359,1361],"[setCurrentUser, setLoggedIn]"]