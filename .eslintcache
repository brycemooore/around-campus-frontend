[{"/Users/bryce/Development/code/project/aroundcampus/frontend/src/App.js":"1","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/SignUp.jsx":"2","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostButton.jsx":"3","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Login.jsx":"4","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/MenuDrawer.jsx":"5","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MainApp.jsx":"6","/Users/bryce/Development/code/project/aroundcampus/frontend/src/index.js":"7","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/Welcome.jsx":"8","/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/loggedInAtom.js":"9","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Post.jsx":"10","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/FeedHeader.jsx":"11","/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/userAtom.js":"12","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostPopup.jsx":"13"},{"size":1837,"mtime":1611015464501,"results":"14","hashOfConfig":"15"},{"size":7093,"mtime":1610847316696,"results":"16","hashOfConfig":"15"},{"size":3006,"mtime":1611022959532,"results":"17","hashOfConfig":"15"},{"size":4248,"mtime":1610921247531,"results":"18","hashOfConfig":"15"},{"size":1115,"mtime":1611013430484,"results":"19","hashOfConfig":"15"},{"size":1603,"mtime":1611022681322,"results":"20","hashOfConfig":"15"},{"size":1350,"mtime":1610840448623,"results":"21","hashOfConfig":"15"},{"size":532,"mtime":1610844376505,"results":"22","hashOfConfig":"15"},{"size":137,"mtime":1610818434235,"results":"23","hashOfConfig":"15"},{"size":1468,"mtime":1611021983899,"results":"24","hashOfConfig":"15"},{"size":976,"mtime":1611013401696,"results":"25","hashOfConfig":"15"},{"size":122,"mtime":1610663715160,"results":"26","hashOfConfig":"15"},{"size":2331,"mtime":1611022400250,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"h0ddi3",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bryce/Development/code/project/aroundcampus/frontend/src/App.js",["57","58","59"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/SignUp.jsx",["60"],"import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios'\nimport {useRecoilState} from 'recoil';\nimport userState from '../atoms/userAtom';\nimport {useHistory} from 'react-router-dom'\nimport LoggedInState from '../atoms/loggedInAtom'\nimport { Link as LinkTo } from \"react-router-dom\";\n\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://github.com/brycemooore\" target=\"_blank\">\n        Bryce Moore\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const [first_name, setFirstName] = useState('')\n  const [last_name, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [password_confirmation, setPasswordConfirm] = useState('')\n  const [stateUser, setUser] = useRecoilState(userState)\n  const history = useHistory()\n  const [errors, setErrors] = useState({})\n  const [loggedIn, setLoggedIn] = useRecoilState(LoggedInState)\n\n  const onSubmitForm = async (e) => {\n      e.preventDefault();\n      console.log(stateUser)\n      const user = {\n          first_name: first_name,\n          last_name: last_name,\n          email: email,\n          username: username,\n          password: password,\n          password_confirmation: password_confirmation,\n      }\n\n      try{\n        const res = await axios.post('/signup', {user, school_id:1})\n        debugger\n        setUser({...res.data.user})\n        localStorage.token = res.data.jwt\n        setLoggedIn(true)\n        history.push('/home')\n      }\n      catch(error){\n        console.log(error.response.data)\n        setErrors({...error.response.data})\n      }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                onChange={(e) => setFirstName(e.target.value)}\n                error={!!errors.first_name}\n                helperText={(!!errors.first_name ? errors.first_name[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange={(e) => setLastName(e.target.value)}\n                error={!!errors.last_name}\n                helperText={(!!errors.last_name ? errors.last_name[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"username\"\n                label=\"Username\"\n                type=\"username\"\n                id=\"username\"\n                autoComplete=\"current-username\"\n                onChange={(e) => setUsername(e.target.value)}\n                error={!!errors.username}\n                helperText={(!!errors.username ? errors.username[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                error={!!errors.email}\n                helperText={(!!errors.email ? errors.email[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPassword(e.target.value)}\n                error={!!errors.password}\n                helperText={(!!errors.password ? errors.password[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password_confirmation\"\n                label=\"Password Confirmation\"\n                type=\"password\"\n                id=\"password_confirmations\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPasswordConfirm(e.target.value)}\n                error={!!errors.password_confirmation}\n                helperText={(!!errors.password_confirmation ? errors.password_confirmation[0] : null)}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={onSubmitForm}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n            <LinkTo style={{textDecoration: 'none'}} to=\"/login\">\n                <Link variant=\"body2\">{\"Already have an account? Login\"}</Link>\n              </LinkTo>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}",["61","62"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostButton.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Login.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/MenuDrawer.jsx",["63","64"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MainApp.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/index.js",[],["65","66"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/Welcome.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/loggedInAtom.js",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Post.jsx",["67","68","69","70"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/FeedHeader.jsx",["71","72"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/userAtom.js",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostPopup.jsx",[],{"ruleId":"73","severity":1,"message":"74","line":3,"column":25,"nodeType":"75","messageId":"76","endLine":3,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":37,"column":13,"nodeType":"79","endLine":46,"endColumn":4},{"ruleId":"77","severity":1,"message":"80","line":46,"column":6,"nodeType":"81","endLine":46,"endColumn":8,"suggestions":"82"},{"ruleId":"73","severity":1,"message":"83","line":68,"column":10,"nodeType":"75","messageId":"76","endLine":68,"endColumn":18},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"73","severity":1,"message":"88","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":15},{"ruleId":"73","severity":1,"message":"89","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":20},{"ruleId":"84","replacedBy":"90"},{"ruleId":"86","replacedBy":"91"},{"ruleId":"73","severity":1,"message":"92","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":20},{"ruleId":"73","severity":1,"message":"93","line":6,"column":10,"nodeType":"75","messageId":"76","endLine":6,"endColumn":14},{"ruleId":"73","severity":1,"message":"94","line":10,"column":10,"nodeType":"75","messageId":"76","endLine":10,"endColumn":14},{"ruleId":"73","severity":1,"message":"95","line":34,"column":9,"nodeType":"75","messageId":"76","endLine":34,"endColumn":14},{"ruleId":"73","severity":1,"message":"96","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":19},{"ruleId":"73","severity":1,"message":"97","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":14},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'setCurrentUser' and 'setLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["98"],"'loggedIn' is assigned a value but never used.","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'Divider' is defined but never used.","'ListItemIcon' is defined but never used.",["99"],["100"],"'makeStyles' is defined but never used.","'blue' is defined but never used.","'Link' is defined but never used.","'date2' is assigned a value but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.",{"desc":"101","fix":"102"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [setCurrentUser, setLoggedIn]",{"range":"103","text":"104"},[1405,1407],"[setCurrentUser, setLoggedIn]"]