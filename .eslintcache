[{"/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/userAtom.js":"1","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MainApp.jsx":"2","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MessagesContainer.jsx":"3","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/Messages.jsx":"4","/Users/bryce/Development/code/project/aroundcampus/frontend/src/index.js":"5","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/UserApp.jsx":"6","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostPopup.jsx":"7","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/SignUp.jsx":"8","/Users/bryce/Development/code/project/aroundcampus/frontend/src/App.js":"9","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Login.jsx":"10","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostButton.jsx":"11","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/MenuDrawer.jsx":"12","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/ConversationBar.jsx":"13","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Post.jsx":"14","/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/loggedInAtom.js":"15","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/Welcome.jsx":"16"},{"size":122,"mtime":1610663715160,"results":"17","hashOfConfig":"18"},{"size":3241,"mtime":1611628160206,"results":"19","hashOfConfig":"18"},{"size":4767,"mtime":1611676258976,"results":"20","hashOfConfig":"18"},{"size":1718,"mtime":1611675103877,"results":"21","hashOfConfig":"18"},{"size":1316,"mtime":1611455317004,"results":"22","hashOfConfig":"18"},{"size":253,"mtime":1611281197932,"results":"23","hashOfConfig":"18"},{"size":3261,"mtime":1611431397422,"results":"24","hashOfConfig":"18"},{"size":8344,"mtime":1611456862029,"results":"25","hashOfConfig":"18"},{"size":1976,"mtime":1611281188785,"results":"26","hashOfConfig":"18"},{"size":4344,"mtime":1611182743638,"results":"27","hashOfConfig":"18"},{"size":3065,"mtime":1611430410486,"results":"28","hashOfConfig":"18"},{"size":1450,"mtime":1611173653307,"results":"29","hashOfConfig":"18"},{"size":1916,"mtime":1611428285552,"results":"30","hashOfConfig":"18"},{"size":1514,"mtime":1611431379804,"results":"31","hashOfConfig":"18"},{"size":137,"mtime":1610818434235,"results":"32","hashOfConfig":"18"},{"size":532,"mtime":1610844376505,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"h0ddi3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/userAtom.js",[],["73","74"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MainApp.jsx",["75","76","77"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MessagesContainer.jsx",["78","79","80"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Messages from \"./Messages\";\nimport ConversationBar from \"../components/ConversationBar\";\nimport UserState from \"../atoms/userAtom\";\nimport { useRecoilValue } from \"recoil\";\nimport axios from \"axios\";\nimport ActionCable from 'actioncable'\n\n\nconst drawerWidth = 240;\nlet connection;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MessagesContainer(props) {\n  const classes = useStyles();\n  const [conversations, setConversations] = useState([{messages: [], sender: {username: ''}, recipient:{username: ''}}]);\n  const [currentConvo, setCurrentConvo] = useState(0);\n  const [header, setHeader] = useState('')\n  const [loading, setLoading] = useState(true)\n  const user = useRecoilValue(UserState);\n  // const [connection, setConnection] = useState()\n\n\n  const createSocket = () => {\n    const cable = ActionCable.createConsumer(\n      \"ws://localhost:3001/cable\"\n    );\n    connection = (cable.subscriptions.create(\n      { channel: \"ChatChannel\", user_id: user.id },\n      {\n        connected: () => console.log(\"connected\"),\n        received: (data) => {\n          handleDataFromConnection(data);\n        },\n      }\n\n    ));\n  };\n\n  const findConvoById = (id) => {\n    let key\n    conversations.find((conversation, index) => {\n      if (conversation.id === id){\n        key = index\n        return true\n      } else{\n        return false\n      }\n  })\n  return key;\n}\n\n\nconst handleDataFromConnection = (input) =>{\n  const index = findConvoById(input.message.conversation_id)\n  let tempConvo = conversations[index]\n  let temp = [...tempConvo.messages, input.message]\n  let tempConvos = conversations.slice()\n  tempConvos[index].messages = temp \n  setConversations(tempConvos)\n}\n\n  useEffect(() => {\n    setHeader(conversations[currentConvo].sender.id === user.id ? conversations[currentConvo].recipient.username : conversations[currentConvo].sender.username)\n  }, [currentConvo])\n\n  useEffect(() =>{\n    if(conversations[0].sender.username !== ''){\n        if(props.location.state) {\n            handleConvoClick(props.location.state.idForConvo)\n        }\n        if(user && !loading){\n          console.log(!connection)\n          if(!connection){\n            createSocket()\n            console.log(!connection)\n          } \n      }\n    }\n    setHeader(conversations[currentConvo].sender.id === user.id ? conversations[currentConvo].recipient.username : conversations[currentConvo].sender.username)\n    setLoading(false)\n  }, [conversations])\n\n  useEffect(async () => {\n    try {\n      const res = await axios.get(\"/conversations\");\n      setConversations(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  \n  useEffect(() => {\n    return () => {\n      console.log(\"cleanup\")\n      console.log(connection)\n      connection.unsubscribe()\n      connection = undefined\n    }\n  }, [])\n\n  // useEffect(() => {\n  //   console.log(connection, \"debug\")\n  // }, [connection])\n\n\n\n//   const moveToTop = (convoId) => {\n//     const sort = conversations.filter(convo => convo.id == convoId);\n//     const newConvo = [sort, ...conversations.filter(convo => convo.id !== convoId)];\n//     setConversations(newConvo)\n//   }\n\n  const handleConvoClick = (e) => {\n    // moveToTop(e)\n    const convo = conversations.find(conversation => conversation.id === e)\n    const index = conversations.indexOf(convo)\n    // debugger\n    console.log(connection)\n    setCurrentConvo(index)\n    \n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            {header}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <ConversationBar  handleClick={handleConvoClick} user={user} conversations={conversations} />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Messages updateConvo={handleDataFromConnection} convo={conversations[currentConvo]} user={user}/>\n      </main>\n    </div>\n  );\n}\n","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/Messages.jsx",["81","82","83","84","85"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/index.js",["86"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport axios from \"axios\";\nimport { RecoilRoot } from \"recoil\";\nimport RecoilizeDebugger from \"recoilize\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\naxios.defaults.baseURL = \"http://127.0.0.1:3001\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\naxios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + localStorage.token;\n\n\naxios.interceptors.request.use(\n  (request) => {\n    console.log(request);\n    // Edit request config\n    return request;\n  },\n  (error) => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    console.log(response);\n    // Edit request config\n    return response;\n  },\n  (error) => {\n    console.log(error);\n    console.log(error.response);\n    return Promise.reject(error);\n  }\n);\n\nReactDOM.render(\n    <RecoilRoot>\n      <Router>\n        {/* <RecoilizeDebugger /> */}\n        <App />\n      </Router>\n    </RecoilRoot>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["87","88"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/UserApp.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostPopup.jsx",["89"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/SignUp.jsx",["90","91","92","93","94","95"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/App.js",["96","97","98","99"],"import React, { useEffect, useMemo } from \"react\";\nimport SignUp from \"./components/SignUp\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport UserApp from \"./containers/UserApp\";\nimport { useSetRecoilState} from \"recoil\";\nimport loggedInState from \"./atoms/loggedInAtom\";\nimport userState from \"./atoms/userAtom\";\nimport axios from \"axios\";\nimport Welcome from \"./containers/Welcome\";\nimport Login from \"./components/Login\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PostPage from './components/PostPopup'\nimport MessagesContainer from './containers/MessagesContainer'\n\n\n\nfunction App() {\n  const setLoggedIn = useSetRecoilState(loggedInState);\n  const setCurrentUser = useSetRecoilState(userState);\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            main: \"#FF8552\",\n          },\n          secondary: {\n            main: \"#85FFC7\",\n          }\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  useEffect(async () => {\n    if (localStorage.token) {\n      setLoggedIn(true);\n      const res = await axios.get(\"/current_user\");\n      setCurrentUser(res.data);\n    } else {\n      setLoggedIn(false);\n    }\n  }, []);\n\n\n  return (\n    <div>\n    <ThemeProvider theme={theme}>\n    <CssBaseline/>\n    <Switch>\n        <Route exact path=\"/\" component={Welcome} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/home\" component={UserApp} />\n        <Route path=\"/posts/:id\" component={PostPage} />\n        <Route path=\"/messages\" component={MessagesContainer} />\n      </Switch>\n    </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Login.jsx",["100","101"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostButton.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/MenuDrawer.jsx",["102","103"],"import React from \"react\";\nimport { Drawer } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {useSetRecoilState} from 'recoil'\nimport LoggedInState from '../atoms/loggedInAtom'\nimport {useHistory} from 'react-router-dom'\n\nexport default function MenuDrawer(props) {\n\n    const history = useHistory()\n    const setLoggedIn = useSetRecoilState(LoggedInState)\n\n    const handleLogout = () => {\n        localStorage.clear()\n        setLoggedIn(false)\n        props.toggle()\n    }\n\n    const handleMessages = () => {\n        props.toggle()\n        history.push('/messages')\n    }\n\n  return (\n    <div>\n      <Drawer anchor=\"right\" open={props.menuOpen} onClose={props.toggle}>\n        <List style={{ width: \"20vw\" }}>\n          <ListItem button key={\"profile\"}>\n            <ListItemText primary={\"Profile\"} color=\"primary\" />\n          </ListItem>\n          <ListItem button key={\"messages\"} onClick={handleMessages}>\n            <ListItemText primary={\"Messages\"} color=\"primary\" />\n          </ListItem>\n          <ListItem button key={\"logout\"} onClick={handleLogout}>\n            <ListItemText primary={\"Logout\"} color=\"primary\" />\n          </ListItem>\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/ConversationBar.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Post.jsx",["104","105","106","107"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/loggedInAtom.js",[],["108","109"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/Welcome.jsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":73,"column":30,"nodeType":"116","messageId":"117","endLine":73,"endColumn":31},{"ruleId":"118","severity":1,"message":"119","line":113,"column":6,"nodeType":"120","endLine":113,"endColumn":8,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":119,"column":6,"nodeType":"120","endLine":119,"endColumn":12,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"124","line":93,"column":6,"nodeType":"120","endLine":93,"endColumn":20,"suggestions":"125"},{"ruleId":"118","severity":1,"message":"126","line":110,"column":6,"nodeType":"120","endLine":110,"endColumn":21,"suggestions":"127"},{"ruleId":"118","severity":1,"message":"128","line":112,"column":13,"nodeType":"129","endLine":119,"endColumn":4},{"ruleId":"130","severity":1,"message":"131","line":20,"column":19,"nodeType":"132","messageId":"133","endLine":20,"endColumn":35},{"ruleId":"134","severity":1,"message":"135","line":23,"column":40,"nodeType":"116","messageId":"136","endLine":23,"endColumn":42},{"ruleId":"134","severity":1,"message":"135","line":36,"column":31,"nodeType":"116","messageId":"136","endLine":36,"endColumn":33},{"ruleId":"130","severity":1,"message":"137","line":40,"column":11,"nodeType":"132","messageId":"133","endLine":40,"endColumn":12},{"ruleId":"118","severity":1,"message":"138","line":43,"column":6,"nodeType":"120","endLine":43,"endColumn":13,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"140","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":25},{"ruleId":"110","replacedBy":"141"},{"ruleId":"112","replacedBy":"142"},{"ruleId":"130","severity":1,"message":"143","line":79,"column":11,"nodeType":"132","messageId":"133","endLine":79,"endColumn":14},{"ruleId":"130","severity":1,"message":"144","line":19,"column":8,"nodeType":"132","messageId":"133","endLine":19,"endColumn":20},{"ruleId":"130","severity":1,"message":"145","line":20,"column":8,"nodeType":"132","messageId":"133","endLine":20,"endColumn":24},{"ruleId":"130","severity":1,"message":"146","line":72,"column":10,"nodeType":"132","messageId":"133","endLine":72,"endColumn":18},{"ruleId":"130","severity":1,"message":"147","line":74,"column":10,"nodeType":"132","messageId":"133","endLine":74,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":103,"column":15,"nodeType":"116","messageId":"136","endLine":103,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":109,"column":18,"nodeType":"116","messageId":"136","endLine":109,"endColumn":20},{"ruleId":"130","severity":1,"message":"148","line":1,"column":28,"nodeType":"132","messageId":"133","endLine":1,"endColumn":35},{"ruleId":"130","severity":1,"message":"149","line":3,"column":25,"nodeType":"132","messageId":"133","endLine":3,"endColumn":35},{"ruleId":"118","severity":1,"message":"128","line":40,"column":13,"nodeType":"129","endLine":48,"endColumn":4},{"ruleId":"118","severity":1,"message":"150","line":48,"column":6,"nodeType":"120","endLine":48,"endColumn":8,"suggestions":"151"},{"ruleId":"130","severity":1,"message":"152","line":62,"column":10,"nodeType":"132","messageId":"133","endLine":62,"endColumn":19},{"ruleId":"130","severity":1,"message":"146","line":64,"column":10,"nodeType":"132","messageId":"133","endLine":64,"endColumn":18},{"ruleId":"130","severity":1,"message":"153","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":15},{"ruleId":"130","severity":1,"message":"154","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":20},{"ruleId":"130","severity":1,"message":"155","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":20},{"ruleId":"130","severity":1,"message":"156","line":6,"column":10,"nodeType":"132","messageId":"133","endLine":6,"endColumn":14},{"ruleId":"130","severity":1,"message":"157","line":10,"column":10,"nodeType":"132","messageId":"133","endLine":10,"endColumn":14},{"ruleId":"130","severity":1,"message":"158","line":34,"column":9,"nodeType":"132","messageId":"133","endLine":34,"endColumn":14},{"ruleId":"110","replacedBy":"159"},{"ruleId":"112","replacedBy":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'connection'. Either include it or remove the dependency array.","ArrayExpression",["163"],"React Hook useEffect has a missing dependency: 'createSocket'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has missing dependencies: 'conversations' and 'user.id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setHeader' needs the current value of 'conversations'.",["165"],"React Hook useEffect has missing dependencies: 'createSocket', 'currentConvo', 'handleConvoClick', 'loading', 'props.location.state', and 'user'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setHeader' needs the current value of 'currentConvo'.",["166"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'formattedMessage' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'n' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'chatCtl'. Either include it or remove the dependency array.",["167"],"'RecoilizeDebugger' is defined but never used.",["161"],["162"],"'res' is assigned a value but never used.","'Autocomplete' is defined but never used.","'CircularProgress' is defined but never used.","'loggedIn' is assigned a value but never used.","'options' is assigned a value but never used.","'useMemo' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'setCurrentUser' and 'setLoggedIn'. Either include them or remove the dependency array.",["168"],"'stateUser' is assigned a value but never used.","'Divider' is defined but never used.","'ListItemIcon' is defined but never used.","'makeStyles' is defined but never used.","'blue' is defined but never used.","'Link' is defined but never used.","'date2' is assigned a value but never used.",["161"],["162"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [connection]",{"range":"181","text":"182"},"Update the dependencies array to be: [createSocket, user]",{"range":"183","text":"184"},"Update the dependencies array to be: [conversations, currentConvo, user.id]",{"range":"185","text":"186"},"Update the dependencies array to be: [conversations, createSocket, currentConvo, handleConvoClick, loading, props.location.state, user]",{"range":"187","text":"188"},"Update the dependencies array to be: [chatCtl, props]",{"range":"189","text":"190"},"Update the dependencies array to be: [setCurrentUser, setLoggedIn]",{"range":"191","text":"192"},[2816,2818],"[connection]",[2887,2893],"[createSocket, user]",[2643,2657],"[conversations, currentConvo, user.id]",[3205,3220],"[conversations, createSocket, currentConvo, handleConvoClick, loading, props.location.state, user]",[1297,1304],"[chatCtl, props]",[1478,1480],"[setCurrentUser, setLoggedIn]"]