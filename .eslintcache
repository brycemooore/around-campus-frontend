[{"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/SignUp.jsx":"1","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Login.jsx":"2","/Users/bryce/Development/code/project/aroundcampus/frontend/src/App.js":"3","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MessagesContainer.jsx":"4","/Users/bryce/Development/code/project/aroundcampus/frontend/src/index.js":"5","/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/loggedInAtom.js":"6","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/ConversationBar.jsx":"7","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostPopup.jsx":"8","/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/userAtom.js":"9","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MainApp.jsx":"10","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostButton.jsx":"11","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/Welcome.jsx":"12","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/MenuDrawer.jsx":"13","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/Messages.jsx":"14","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Nav.jsx":"15","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/FeedHeader.jsx":"16","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Post.jsx":"17","/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/UserApp.jsx":"18"},{"size":7175,"mtime":1611182831140,"results":"19","hashOfConfig":"20"},{"size":4344,"mtime":1611182743638,"results":"21","hashOfConfig":"20"},{"size":1976,"mtime":1611281188785,"results":"22","hashOfConfig":"20"},{"size":3010,"mtime":1611274956192,"results":"23","hashOfConfig":"20"},{"size":1308,"mtime":1611273975925,"results":"24","hashOfConfig":"20"},{"size":137,"mtime":1610818434235,"results":"25","hashOfConfig":"20"},{"size":1719,"mtime":1611273880290,"results":"26","hashOfConfig":"20"},{"size":2793,"mtime":1611273566453,"results":"27","hashOfConfig":"20"},{"size":122,"mtime":1610663715160,"results":"28","hashOfConfig":"20"},{"size":2999,"mtime":1611282278338,"results":"29","hashOfConfig":"20"},{"size":3043,"mtime":1611267299827,"results":"30","hashOfConfig":"20"},{"size":532,"mtime":1610844376505,"results":"31","hashOfConfig":"20"},{"size":1450,"mtime":1611173653307,"results":"32","hashOfConfig":"20"},{"size":1324,"mtime":1611279017719,"results":"33","hashOfConfig":"20"},{"size":1367,"mtime":1610917694717,"results":"34","hashOfConfig":"20"},{"size":979,"mtime":1611080436901,"results":"35","hashOfConfig":"20"},{"size":1468,"mtime":1611021983899,"results":"36","hashOfConfig":"20"},{"size":253,"mtime":1611281197932,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"h0ddi3",{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/SignUp.jsx",["81"],"import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios'\nimport {useRecoilState} from 'recoil';\nimport userState from '../atoms/userAtom';\nimport {useHistory} from 'react-router-dom'\nimport LoggedInState from '../atoms/loggedInAtom'\nimport { Link as LinkTo } from \"react-router-dom\";\n\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://github.com/brycemooore\" target=\"_blank\">\n        Bryce Moore\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const [first_name, setFirstName] = useState('')\n  const [last_name, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [password_confirmation, setPasswordConfirm] = useState('')\n  const [stateUser, setUser] = useRecoilState(userState)\n  const history = useHistory()\n  const [errors, setErrors] = useState({})\n  const [loggedIn, setLoggedIn] = useRecoilState(LoggedInState)\n\n  const onSubmitForm = async (e) => {\n      e.preventDefault();\n      console.log(stateUser)\n      const user = {\n          first_name: first_name,\n          last_name: last_name,\n          email: email,\n          username: username,\n          password: password,\n          password_confirmation: password_confirmation,\n      }\n\n      try{\n        const res = await axios.post('/signup', {user, school_id:1})\n        debugger\n        setUser({...res.data.user})\n        localStorage.token = res.data.jwt\n        axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + res.data.jwt\n        setLoggedIn(true)\n        history.push('/home')\n      }\n      catch(error){\n        console.log(error.response.data)\n        setErrors({...error.response.data})\n      }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                onChange={(e) => setFirstName(e.target.value)}\n                error={!!errors.first_name}\n                helperText={(!!errors.first_name ? errors.first_name[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange={(e) => setLastName(e.target.value)}\n                error={!!errors.last_name}\n                helperText={(!!errors.last_name ? errors.last_name[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"username\"\n                label=\"Username\"\n                type=\"username\"\n                id=\"username\"\n                autoComplete=\"current-username\"\n                onChange={(e) => setUsername(e.target.value)}\n                error={!!errors.username}\n                helperText={(!!errors.username ? errors.username[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                error={!!errors.email}\n                helperText={(!!errors.email ? errors.email[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPassword(e.target.value)}\n                error={!!errors.password}\n                helperText={(!!errors.password ? errors.password[0] : null)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password_confirmation\"\n                label=\"Password Confirmation\"\n                type=\"password\"\n                id=\"password_confirmations\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPasswordConfirm(e.target.value)}\n                error={!!errors.password_confirmation}\n                helperText={(!!errors.password_confirmation ? errors.password_confirmation[0] : null)}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={onSubmitForm}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n            <LinkTo style={{textDecoration: 'none'}} to=\"/login\">\n                <Link variant=\"body2\">{\"Already have an account? Login\"}</Link>\n              </LinkTo>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}",["82","83"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Login.jsx",["84","85"],"import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\nimport userState from \"../atoms/userAtom\";\nimport { useHistory } from \"react-router-dom\";\nimport LoggedInState from \"../atoms/loggedInAtom\";\nimport { Link as LinkTo } from \"react-router-dom\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://github.com/brycemooore\"\n        target=\"_blank\"\n      >\n        Bryce Moore\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [stateUser, setUser] = useRecoilState(userState);\n  const history = useHistory();\n  const [loggedIn, setLoggedIn] = useRecoilState(LoggedInState);\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    const user = {\n      username: username,\n      password: password,\n    };\n\n    try {\n      const res = await axios.post(\"/login\", { user, school_id: 1 });\n      setUser({ ...res.data.user });\n      localStorage.token = res.data.jwt;\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + res.data.jwt;\n      setLoggedIn(true);\n      history.push(\"/home\");\n    } catch (error) {\n      setErrors({ ...error.response.data.errors });\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(e) => setUsername(e.target.value)}\n            error={!!errors.username}\n            helperText={!!errors.username ? errors.username[0] : null}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e) => setPassword(e.target.value)}\n            error={!!errors.password}\n            helperText={!!errors.password ? errors.password[0] : null}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={onSubmitForm}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <LinkTo to=\"/signup\">\n                <Link variant=\"body2\">{\"Don't have an account? Sign Up\"}</Link>\n              </LinkTo>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n",["86","87"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/App.js",["88","89","90","91"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MessagesContainer.jsx",["92","93","94"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/index.js",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/loggedInAtom.js",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/ConversationBar.jsx",[],["95","96"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostPopup.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/atoms/userAtom.js",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/MainApp.jsx",["97","98","99"],"import axios from \"axios\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport userState from \"../atoms/userAtom\";\nimport LoggedInState from \"../atoms/loggedInAtom\";\nimport { Redirect } from \"react-router-dom\";\nimport Nav from \"../components/Nav\";\nimport PostButton from \"../components/PostButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {List} from '@material-ui/core'\nimport Post from '../components/Post'\nimport FeedHeader from '../components/FeedHeader'\nimport { useSnackbar } from 'notistack';\nimport ActionCable from 'actioncable'\nimport {Button} from '@material-ui/core'\nimport {useHistory} from 'react-router-dom'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\n\n\nexport default function MainApp() {\n  const user = useRecoilValue(userState);\n  const loggedIn = useRecoilValue(LoggedInState);\n  const classes = useStyles();\n  const [posts, setPosts] = useState([]);\n  let connection\n  const { enqueueSnackbar, closeSnackbar} = useSnackbar();\n  const history = useHistory()\n\n  const action = (convoId) => {\n    const onClickHandle = () => {\n      closeSnackbar()\n      history.push({\n        pathname: '/messages', \n        state: {\n          idForConvo: convoId\n        }\n      })\n    }\n    return(\n    <Fragment>\n        <Button color=\"primary\"onClick={onClickHandle}>\n            Message\n        </Button>\n    </Fragment>\n  )};\n\n  const handleDataFromConnection = (input) =>{\n    enqueueSnackbar(input.message.user.username + ' says: ' + input.message.body, {\n      autoHideDuration: 3000,\n      action: () => action(input.message.conversation_id),\n      root: {\n        backgroundColor: \"#FF8552\"\n      }\n    })\n  }\n\n  const createSocket = () => {\n    const cable = ActionCable.createConsumer(\n      \"ws://localhost:3001/\" + \"cable\"\n    );\n    connection = cable.subscriptions.create(\n      { channel: \"ChatChannel\", user_id: user.id },\n      {\n        connected: () => console.log(\"connected\"),\n        received: (data) => {\n          handleDataFromConnection(data);\n        },\n      }\n    );\n  };\n\n  const generatePosts = () => {\n    return posts.map((post, index) => {\n      return <Post  key={index} post={post}/>\n    })\n  }\n\n  const addPost = (post) => {\n    setPosts([post, ...posts])\n  }\n\n  const getPosts = async () => {\n    const res = await axios.get(\"/posts\");\n    setPosts(res.data)\n  };\n  \n  useEffect(() => {\n    getPosts()\n  }, [])\n\n  useEffect(() => {\n    if(user.username){\n      createSocket()\n    }\n  }, [user])\n\n  return (\n    <div className={classes.root}>\n      {loggedIn ? (\n        <div>\n          <Nav />\n          <FeedHeader school={user.school}/>\n          <List>\n            {generatePosts()}\n          </List>\n          <PostButton addPost={addPost} user={user} />\n        </div>\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n    </div>\n  );\n}\n","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/PostButton.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/Welcome.jsx",[],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/MenuDrawer.jsx",["100","101"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/Messages.jsx",["102","103","104","105","106"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Nav.jsx",["107"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuDrawer from './MenuDrawer'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const toggleMenuOpen = () => {\n    setMenuOpen(!menuOpen)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{ background: 'transparent', boxShadow: 'none'}}>\n        <Toolbar>\n        <Typography variant=\"h6\" className={classes.title} color=\"primary\">\n            Around Campus\n          </Typography>\n          <IconButton onClick={toggleMenuOpen} edge=\"start\" className={classes.menuButton} color=\"primary\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <MenuDrawer toggle={toggleMenuOpen} menuOpen={menuOpen}/>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/FeedHeader.jsx",["108","109"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/components/Post.jsx",["110","111","112","113"],"/Users/bryce/Development/code/project/aroundcampus/frontend/src/containers/UserApp.jsx",[],{"ruleId":"114","severity":1,"message":"115","line":68,"column":10,"nodeType":"116","messageId":"117","endLine":68,"endColumn":18},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"114","severity":1,"message":"122","line":62,"column":10,"nodeType":"116","messageId":"117","endLine":62,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":64,"column":10,"nodeType":"116","messageId":"117","endLine":64,"endColumn":18},{"ruleId":"118","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"114","severity":1,"message":"125","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":35},{"ruleId":"114","severity":1,"message":"126","line":3,"column":25,"nodeType":"116","messageId":"117","endLine":3,"endColumn":35},{"ruleId":"127","severity":1,"message":"128","line":40,"column":13,"nodeType":"129","endLine":48,"endColumn":4},{"ruleId":"127","severity":1,"message":"130","line":48,"column":6,"nodeType":"131","endLine":48,"endColumn":8,"suggestions":"132"},{"ruleId":"127","severity":1,"message":"133","line":48,"column":6,"nodeType":"131","endLine":48,"endColumn":35,"suggestions":"134"},{"ruleId":"127","severity":1,"message":"135","line":56,"column":6,"nodeType":"131","endLine":56,"endColumn":21,"suggestions":"136"},{"ruleId":"127","severity":1,"message":"128","line":58,"column":13,"nodeType":"129","endLine":65,"endColumn":4},{"ruleId":"118","replacedBy":"137"},{"ruleId":"120","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":72,"column":30,"nodeType":"141","messageId":"142","endLine":72,"endColumn":31},{"ruleId":"114","severity":1,"message":"143","line":74,"column":5,"nodeType":"116","messageId":"117","endLine":74,"endColumn":15},{"ruleId":"127","severity":1,"message":"144","line":108,"column":6,"nodeType":"131","endLine":108,"endColumn":12,"suggestions":"145"},{"ruleId":"114","severity":1,"message":"146","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":15},{"ruleId":"114","severity":1,"message":"147","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":20},{"ruleId":"114","severity":1,"message":"148","line":20,"column":19,"nodeType":"116","messageId":"117","endLine":20,"endColumn":35},{"ruleId":"149","severity":1,"message":"150","line":23,"column":40,"nodeType":"141","messageId":"151","endLine":23,"endColumn":42},{"ruleId":"149","severity":1,"message":"150","line":34,"column":31,"nodeType":"141","messageId":"151","endLine":34,"endColumn":33},{"ruleId":"114","severity":1,"message":"152","line":38,"column":11,"nodeType":"116","messageId":"117","endLine":38,"endColumn":12},{"ruleId":"127","severity":1,"message":"153","line":41,"column":6,"nodeType":"131","endLine":41,"endColumn":13,"suggestions":"154"},{"ruleId":"114","severity":1,"message":"155","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":14},{"ruleId":"114","severity":1,"message":"156","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":19},{"ruleId":"114","severity":1,"message":"155","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":14},{"ruleId":"114","severity":1,"message":"157","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":20},{"ruleId":"114","severity":1,"message":"158","line":6,"column":10,"nodeType":"116","messageId":"117","endLine":6,"endColumn":14},{"ruleId":"114","severity":1,"message":"159","line":10,"column":10,"nodeType":"116","messageId":"117","endLine":10,"endColumn":14},{"ruleId":"114","severity":1,"message":"160","line":34,"column":9,"nodeType":"116","messageId":"117","endLine":34,"endColumn":14},"no-unused-vars","'loggedIn' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"'stateUser' is assigned a value but never used.",["161"],["162"],"'useMemo' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'setCurrentUser' and 'setLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["163"],"React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has missing dependencies: 'handleConvoClick' and 'props.location.state'. Either include them or remove the dependency array.",["165"],["161"],["162"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'connection' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createSocket'. Either include it or remove the dependency array.",["166"],"'Divider' is defined but never used.","'ListItemIcon' is defined but never used.","'formattedMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'n' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'chatCtl'. Either include it or remove the dependency array.",["167"],"'Button' is defined but never used.","'CardActions' is defined but never used.","'makeStyles' is defined but never used.","'blue' is defined but never used.","'Link' is defined but never used.","'date2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [setCurrentUser, setLoggedIn]",{"range":"178","text":"179"},"Update the dependencies array to be: [conversations, currentConvo, user.id]",{"range":"180","text":"181"},"Update the dependencies array to be: [conversations, handleConvoClick, props.location.state]",{"range":"182","text":"183"},"Update the dependencies array to be: [createSocket, user]",{"range":"184","text":"185"},"Update the dependencies array to be: [chatCtl, props]",{"range":"186","text":"187"},[1478,1480],"[setCurrentUser, setLoggedIn]",[1561,1590],"[conversations, currentConvo, user.id]",[1779,1794],"[conversations, handleConvoClick, props.location.state]",[2645,2651],"[createSocket, user]",[1210,1217],"[chatCtl, props]"]